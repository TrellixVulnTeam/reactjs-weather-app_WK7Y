{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\reactapp\\\\weather\\\\src\\\\components\\\\line-chart.js\";\nimport React from \"react\";\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LineChart extends React.Component {\n  render() {\n    const forecastItems = this.props.hour_forecast.map((f, i) => {\n      let hour = new Date(f.dt * 1000).getHours();\n      return {\n        hour\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: {\n          labels: {\n            forecastItems\n          },\n          datasets: [{}]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["C:/xampp/htdocs/reactapp/weather/src/components/line-chart.js"],"names":["React","Bar","LineChart","Component","render","forecastItems","props","hour_forecast","map","f","i","hour","Date","dt","getHours","labels","datasets"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAuC;AACnCC,EAAAA,MAAM,GAAE;AACJ,UAAMC,aAAa,GAAG,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,GAAzB,CAA8B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAG1D,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASH,CAAC,CAACI,EAAF,GAAO,IAAhB,EAAsBC,QAAtB,EAAX;AAEA,aACQ;AAACH,QAAAA;AAAD,OADR;AAGH,KARqB,CAAtB;AASA,wBACI;AAAA,6BACI,QAAC,GAAD;AACI,QAAA,IAAI,EAAE;AACFI,UAAAA,MAAM,EAAE;AAACV,YAAAA;AAAD,WADN;AAEFW,UAAAA,QAAQ,EAAC,CACL,EADK;AAFP;AADV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AA5BkC;;AAkCvC,eAAed,SAAf","sourcesContent":["import React from \"react\";\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\nclass LineChart extends React.Component{\r\n    render(){\r\n        const forecastItems = this.props.hour_forecast.map( (f, i) => {\r\n\r\n            \r\n            let hour = new Date(f.dt * 1000).getHours();\r\n\r\n            return(\r\n                    {hour}\r\n            );\r\n        });\r\n        return(\r\n            <div>\r\n                <Bar\r\n                    data={{ \r\n                        labels: {forecastItems},\r\n                        datasets:[\r\n                            {\r\n\r\n                            }\r\n                        ]\r\n                     }}\r\n\r\n                />\r\n            </div>\r\n\r\n        );\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}