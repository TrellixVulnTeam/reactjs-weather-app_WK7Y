{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\reactapp\\\\weather\\\\src\\\\components\\\\line-chart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LineChart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    setChartData({\n      labels: [1, 2, 3, 4, 5],\n      datasets: [{\n        labels: 'Exemplo',\n        data: [32, 45, 12, 76, 60],\n        backgroundColor: ['rgba(75,192,192,0.6)'],\n        borderWidth: 4\n      }]\n    });\n  };\n\n  useEffect(() => {\n    chart();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }, []);\n};\n/*\r\nclass LineChart extends React.Component{\r\n    \r\n\r\n\r\n    render(){\r\n        let h = [];\r\n        let t = [];\r\n        let i;\r\n        const hourTime = [this.props.hour_forecast.map( (f) => {\r\n            let hour = new Date(f.dt * 1000).getHours();\r\n            h.push(hour);\r\n            return(\r\n                    {hour}\r\n            );\r\n        })];\r\n\r\n        const hourTemp = [this.props.hour_forecast.map( (f) => {\r\n\r\n            \r\n            let temp = f.temp;\r\n            t.push(temp);\r\n            return(\r\n                    {temp}\r\n            );\r\n        })];\r\n        console.log(h);\r\n        console.log(t);\r\n        \r\n        \r\n        return(\r\n            <div>\r\n                <Line\r\n                \r\n                    data={{ \r\n                        labels:  ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                        datasets:[\r\n                            {\r\n                                label: 'Evolution of Day Temperature',\r\n                                data: [12, 19, 3, 5, 2, 3],\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)',\r\n                                    'rgba(255, 206, 86, 0.2)',\r\n                                    'rgba(75, 192, 192, 0.2)',\r\n                                    'rgba(153, 102, 255, 0.2)',\r\n                                    'rgba(255, 159, 64, 0.2)'\r\n                                ],\r\n                                borderColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ],\r\n                                borderWidth: 1\r\n\r\n                            }\r\n                        ]\r\n                     }}\r\n                    height={400}\r\n                    width={600}\r\n                    options={{ \r\n                        maintainAspectRatio: false,\r\n                        \r\n                     }}\r\n\r\n                    />\r\n            </div>\r\n\r\n        );\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\n*/\n\n\n_s(LineChart, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["C:/xampp/htdocs/reactapp/weather/src/components/line-chart.js"],"names":["React","Line","LineChart","chartData","setChartData","useState","chart","labels","datasets","data","backgroundColor","borderWidth","useEffect"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;;AAIA,MAAMC,SAAS,GAAG,MAClB;AAAA;;AACI,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMC,KAAK,GAAG,MAAM;AAChBF,IAAAA,YAAY,CAAC;AACTG,MAAAA,MAAM,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CADE;AAETC,MAAAA,QAAQ,EAAE,CACN;AACID,QAAAA,MAAM,EAAE,SADZ;AAEIE,QAAAA,IAAI,EAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,CAFT;AAGIC,QAAAA,eAAe,EAAC,CACZ,sBADY,CAHpB;AAMIC,QAAAA,WAAW,EAAE;AANjB,OADM;AAFD,KAAD,CAAZ;AAaH,GAdD;;AAeAC,EAAAA,SAAS,CAAC,MAAM;AACZN,IAAAA,KAAK;AACL,wBACI;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEH;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAPQ,EAON,EAPM,CAAT;AAUH,CA7BD;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAjHMD,S;;KAAAA,S;AAkHN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n\r\n\r\nconst LineChart = () =>\r\n{\r\n    const [chartData, setChartData] = useState({})\r\n\r\n    const chart = () => {\r\n        setChartData({\r\n            labels:[1,2,3,4,5],\r\n            datasets: [\r\n                {\r\n                    labels: 'Exemplo',\r\n                    data:[32,45,12,76,60],\r\n                    backgroundColor:[\r\n                        'rgba(75,192,192,0.6)'\r\n                    ],\r\n                    borderWidth: 4,\r\n                }\r\n            ]\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        chart()\r\n        return(\r\n            <div>\r\n                <Line data={chartData} />\r\n            </div>\r\n        )\r\n    }, [])\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nclass LineChart extends React.Component{\r\n    \r\n\r\n\r\n    render(){\r\n        let h = [];\r\n        let t = [];\r\n        let i;\r\n        const hourTime = [this.props.hour_forecast.map( (f) => {\r\n            let hour = new Date(f.dt * 1000).getHours();\r\n            h.push(hour);\r\n            return(\r\n                    {hour}\r\n            );\r\n        })];\r\n\r\n        const hourTemp = [this.props.hour_forecast.map( (f) => {\r\n\r\n            \r\n            let temp = f.temp;\r\n            t.push(temp);\r\n            return(\r\n                    {temp}\r\n            );\r\n        })];\r\n        console.log(h);\r\n        console.log(t);\r\n        \r\n        \r\n        return(\r\n            <div>\r\n                <Line\r\n                \r\n                    data={{ \r\n                        labels:  ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                        datasets:[\r\n                            {\r\n                                label: 'Evolution of Day Temperature',\r\n                                data: [12, 19, 3, 5, 2, 3],\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)',\r\n                                    'rgba(255, 206, 86, 0.2)',\r\n                                    'rgba(75, 192, 192, 0.2)',\r\n                                    'rgba(153, 102, 255, 0.2)',\r\n                                    'rgba(255, 159, 64, 0.2)'\r\n                                ],\r\n                                borderColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ],\r\n                                borderWidth: 1\r\n\r\n                            }\r\n                        ]\r\n                     }}\r\n                    height={400}\r\n                    width={600}\r\n                    options={{ \r\n                        maintainAspectRatio: false,\r\n                        \r\n                     }}\r\n\r\n                    />\r\n            </div>\r\n\r\n        );\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\n*/\r\nexport default LineChart;\r\n\r\n"]},"metadata":{},"sourceType":"module"}