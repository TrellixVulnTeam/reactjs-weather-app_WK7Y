{"ast":null,"code":"import _regeneratorRuntime from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./App.scss';import'./index.css';import SearchBar from'./components/search-bar';import CurrentWeather from'./components/current-weather';import Forecast from'./components/forecast-weather';import ErrorWeather from'./components/error-weather';import{getCurrentWeather,getForecast}from'./apis/open-weather.api';import LineChart from'./components/line-chart';//functional component\n//returns template\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={location:'Portim√£o',selectValue:'metric',temp:'',mintemp:'',maxtemp:'',humidity:'',clouds:'',feelsLike:'',description:'',icon:'',city:'',cod:'',dailyForecast:[],hourlyForecast:[],day:'',degree:''};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.onFormSubmit();}},{key:\"onInputChange\",value:function onInputChange(e){this.setState({location:e.target.value});}},{key:\"onHandleChange\",value:function onHandleChange(e){this.setState({selectValue:e.target.value});}},{key:\"onFormSubmit\",value:function(){var _onFormSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var weatherRes,lat,lon,forecastRes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getCurrentWeather(this.state.location,this.state.selectValue);case 2:weatherRes=_context.sent;this.setState({cod:weatherRes});if(!(this.state.cod!==undefined)){_context.next=13;break;}console.log('weather res',weatherRes);lat=weatherRes.data.coord.lat;lon=weatherRes.data.coord.lon;_context.next=10;return getForecast(lat,lon,this.state.selectValue);case 10:forecastRes=_context.sent;console.log('Forecast HOur',forecastRes.data.hourly);this.setState({city:weatherRes.data.name,day:weatherRes.data.dt,temp:weatherRes.data.main.temp,mintemp:weatherRes.data.main.temp_min,maxtemp:weatherRes.data.main.temp_max,feelsLike:weatherRes.data.main.feels_like,humidity:weatherRes.data.main.humidity,clouds:weatherRes.data.clouds.all,description:weatherRes.data.weather[0].main,icon:weatherRes.data.weather[0].icon,dailyForecast:forecastRes.data.daily,hourlyForecast:forecastRes.data.hourly,degree:this.state.selectValue});case 13:case\"end\":return _context.stop();}}},_callee,this);}));function onFormSubmit(){return _onFormSubmit.apply(this,arguments);}return onFormSubmit;}()},{key:\"render\",value:function render(){var _this2=this;var current_weather;var forecast_weather;var linechart_weather;var error;if(this.state.cod!=='404'){current_weather=/*#__PURE__*/_jsx(CurrentWeather,{currentTemperature:this.state.temp,minTemperature:this.state.mintemp,maxTemperature:this.state.maxtemp,feelsLike:this.state.feelsLike,humidity:this.state.humidity,clouds:this.state.clouds,description:this.state.description,icon:this.state.icon,city:this.state.city,day:this.state.day,selectValue:this.state.degree});forecast_weather=/*#__PURE__*/_jsx(Forecast,{forecast:this.state.dailyForecast,selectValue:this.state.degree});linechart_weather=/*#__PURE__*/_jsx(LineChart,{hour_forecast:this.state.hourlyForecast});}else{error=/*#__PURE__*/_jsx(ErrorWeather,{});}return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header mx-auto min-h-screen\",children:[/*#__PURE__*/_jsx(SearchBar,{location:this.state.location,selectValue:this.state.selectValue,inputChange:function inputChange(e){return _this2.onInputChange(e);},handleChange:function handleChange(e){return _this2.onHandleChange(e);},formsubmitted:function formsubmitted(){return _this2.onFormSubmit();}}),error,/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap justify-center\",children:current_weather}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap justify-center\",children:linechart_weather}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap justify-center\",children:forecast_weather})]})});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["C:/xampp/htdocs/reactapp/weather/src/App.js"],"names":["React","SearchBar","CurrentWeather","Forecast","ErrorWeather","getCurrentWeather","getForecast","LineChart","App","props","state","location","selectValue","temp","mintemp","maxtemp","humidity","clouds","feelsLike","description","icon","city","cod","dailyForecast","hourlyForecast","day","degree","onFormSubmit","e","setState","target","value","weatherRes","undefined","console","log","lat","data","coord","lon","forecastRes","hourly","name","dt","main","temp_min","temp_max","feels_like","all","weather","daily","current_weather","forecast_weather","linechart_weather","error","onInputChange","onHandleChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './App.scss';\nimport './index.css';\n\nimport SearchBar from './components/search-bar';\nimport CurrentWeather from './components/current-weather';\nimport Forecast from './components/forecast-weather';\nimport ErrorWeather from './components/error-weather';\n\nimport {getCurrentWeather, getForecast} from './apis/open-weather.api';\nimport LineChart from './components/line-chart';\n\n//functional component\n//returns template\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n        location: 'Portim√£o',\n        selectValue: 'metric',\n        temp: '',\n        mintemp: '',\n        maxtemp: '',\n        humidity: '',\n        clouds: '',\n        feelsLike: '',\n        description: '',\n        icon: '',\n        city: '',\n        cod: '',\n        dailyForecast: [],\n        hourlyForecast: [],\n        day: '',\n        degree: ''\n\n    };\n    \n    \n  }\n  componentDidMount(){\n    this.onFormSubmit();\n  }\n\n  onInputChange(e){\n      this.setState({\n          location: e.target.value,\n          \n      });\n  }\n  onHandleChange(e){\n    this.setState({\n      selectValue : e.target.value\n    });\n  }\n  async onFormSubmit(){\n    \n    const weatherRes = await getCurrentWeather(this.state.location, this.state.selectValue);\n    this.setState({\n      cod : weatherRes\n    })\n    if(this.state.cod !== undefined){\n\n    \n    console.log('weather res', weatherRes);\n      const lat = weatherRes.data.coord.lat;\n      const lon = weatherRes.data.coord.lon;\n      const forecastRes = await getForecast(lat,lon, this.state.selectValue);\n      console.log('Forecast HOur', forecastRes.data.hourly);\n      this.setState({\n            city :  weatherRes.data.name,\n            day :  weatherRes.data.dt,\n            temp: weatherRes.data.main.temp,\n            mintemp: weatherRes.data.main.temp_min,\n            maxtemp: weatherRes.data.main.temp_max,\n            feelsLike: weatherRes.data.main.feels_like,\n            humidity: weatherRes.data.main.humidity,\n            clouds: weatherRes.data.clouds.all,\n            description: weatherRes.data.weather[0].main,\n            icon: weatherRes.data.weather[0].icon,\n            dailyForecast: forecastRes.data.daily,\n            hourlyForecast: forecastRes.data.hourly,\n            degree: this.state.selectValue,\n      });\n    }\n    \n  }\n\n  render(){\n\n    let current_weather;\n    let forecast_weather;\n    let linechart_weather;\n    let error;\n    if(this.state.cod !== '404'){\n      current_weather = (\n        <CurrentWeather \n                currentTemperature={this.state.temp}\n                minTemperature={this.state.mintemp}\n                maxTemperature={this.state.maxtemp}\n                feelsLike={this.state.feelsLike}\n                humidity={this.state.humidity}\n                clouds={this.state.clouds}\n                description={this.state.description}\n                icon={this.state.icon}     \n                city={this.state.city} \n                day={this.state.day}\n                selectValue={this.state.degree}\n          />);\n      forecast_weather=(<Forecast \n        forecast={this.state.dailyForecast}\n        selectValue={this.state.degree}/>);\n      linechart_weather = (<LineChart hour_forecast={this.state.hourlyForecast} />);\n    }else{\n      error = (<ErrorWeather />);\n    }\n\n\n    return (\n      <div className=\"App\">\n        \n        <header className=\"App-header mx-auto min-h-screen\">\n          \n          <SearchBar \n                location={this.state.location} \n                selectValue={this.state.selectValue}\n                inputChange= {e => this.onInputChange(e)}\n                handleChange= {e => this.onHandleChange(e)}\n                formsubmitted={() => this.onFormSubmit()}\n          />\n          {error}\n          <div className=\"flex flex-wrap justify-center\">\n            {current_weather}\n            \n          </div>\n          <div className=\"flex flex-wrap justify-center\">\n            {linechart_weather}  \n          </div>\n          <div className=\"flex flex-wrap justify-center\">\n            {forecast_weather}  \n          </div>\n          \n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}