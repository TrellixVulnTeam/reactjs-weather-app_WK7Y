{"ast":null,"code":"import _classCallCheck from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import'./forecast-weather.scss';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Forecast=/*#__PURE__*/function(_React$Component){_inherits(Forecast,_React$Component);var _super=_createSuper(Forecast);function Forecast(){_classCallCheck(this,Forecast);return _super.apply(this,arguments);}_createClass(Forecast,[{key:\"render\",value:function render(){var _this=this;var forecastItems=this.props.forecast.map(function(f,i){var key=\"forecast-item_\".concat(i);var url=\"http://openweathermap.org/img/wn/\".concat(f.weather[0].icon,\"@2x.png\");var ampm='AM';var day=new Date(f.dt*1000).getDay();var weekdays=new Array(7);weekdays[0]=\"Sunday\";weekdays[1]=\"Monday\";weekdays[2]=\"Tuesday\";weekdays[3]=\"Wednesday\";weekdays[4]=\"Thrusday\";weekdays[5]=\"Friday\";weekdays[6]=\"Saturday\";var date=weekdays[day];var month=new Date(f.dt*1000).getMonth();var months=new Array(7);months[0]=\"January\";months[1]=\"February\";months[2]=\"March\";months[3]=\"April\";months[4]=\"May\";months[5]=\"June\";months[6]=\"July\";months[7]=\"August\";months[8]=\"September\";months[9]=\"October\";months[10]=\"November\";months[11]=\"December\";var MonthDate=months[month];var Year=new Date(f.dt*1000).getFullYear();var numberDay=new Date(f.dt*1000).getDate();var degree;if(_this.props.selectValue==='metric'){degree='C';}else{degree='F';}var hour=new Date(f.dt*1000).getHours();var current=Math.round(f.temp.day);var fl=Math.round(f.feels_like.day);if(hour>12){hour=hour-12;ampm='PM';}return/*#__PURE__*/_jsx(\"div\",{className:\"text-center justify-between items-center inline-block  rounded-2xl my-2 mx-2 shadow-md bg-gray-900 \",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center  flex items-center justify-center flex-col mx-auto\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"block my-1\",children:[current,\"\\xB0 \",degree]}),/*#__PURE__*/_jsxs(\"p\",{className:\"block my-1\",children:[f.weather[0].main,\" \",/*#__PURE__*/_jsx(\"img\",{className:\"block\",src:url,alt:f.weather[0].description})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"block my-1 w-48 text-sm\",children:[date,\", \",numberDay,\" \",MonthDate,\" \",Year]}),/*#__PURE__*/_jsxs(\"p\",{className:\"block my-1 text-base\",children:[hour,\":00 \",ampm,\" \"]}),/*#__PURE__*/_jsx(\"p\",{className:\"block my-1\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm\",children:[\"Feels Like: \",fl,\"\\xB0 \",degree]})})]})},key);});return/*#__PURE__*/_jsx(\"div\",{className:\"w-full px-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-transparent text-white relative min-w-0 break-words rounded-lg overflow-hidden shadow-sm mb-4 w-full  dark:bg-gray-600\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"divider table mx-2 text-center bg-transparent whitespace-nowrap mb-2\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"inline-block px-3 font-bold  \",children:\"Daily Forecast\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4 relative \",children:forecastItems})]})});}}]);return Forecast;}(React.Component);export default Forecast;","map":{"version":3,"sources":["C:/xampp/htdocs/reactapp/weather/src/components/forecast-weather.js"],"names":["React","Forecast","forecastItems","props","forecast","map","f","i","key","url","weather","icon","ampm","day","Date","dt","getDay","weekdays","Array","date","month","getMonth","months","MonthDate","Year","getFullYear","numberDay","getDate","degree","selectValue","hour","getHours","current","Math","round","temp","fl","feels_like","main","description","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './forecast-weather.scss';\r\n\r\nclass Forecast extends React.Component{\r\n    render(){\r\n        const forecastItems = this.props.forecast.map( (f, i) => {\r\n            \r\n            const key = `forecast-item_${i}`;\r\n            const url = `http://openweathermap.org/img/wn/${f.weather[0].icon}@2x.png`;\r\n            let ampm = 'AM';\r\n            let day = new Date(f.dt * 1000).getDay();\r\n            let weekdays = new Array(7);\r\n            weekdays[0]= \"Sunday\";\r\n            weekdays[1]= \"Monday\";\r\n            weekdays[2]= \"Tuesday\";\r\n            weekdays[3]= \"Wednesday\";\r\n            weekdays[4]= \"Thrusday\";\r\n            weekdays[5]= \"Friday\";\r\n            weekdays[6]= \"Saturday\";\r\n            let date = weekdays[day];\r\n            \r\n            let month = new Date(f.dt * 1000).getMonth();\r\n            let months = new Array(7);\r\n            months[0]= \"January\";\r\n            months[1]= \"February\";\r\n            months[2]= \"March\";\r\n            months[3]= \"April\";\r\n            months[4]= \"May\";\r\n            months[5]= \"June\";\r\n            months[6]= \"July\";\r\n            months[7]= \"August\";\r\n            months[8]= \"September\";\r\n            months[9]= \"October\";\r\n            months[10]= \"November\";\r\n            months[11]= \"December\";\r\n            let MonthDate = months[month];\r\n            let Year = new Date(f.dt * 1000).getFullYear();\r\n            let numberDay = new Date(f.dt * 1000).getDate();\r\n            let degree;\r\n            if(this.props.selectValue === 'metric'){\r\n                degree = 'C';\r\n            }else{\r\n                degree = 'F';\r\n            }\r\n\r\n            let hour = new Date(f.dt * 1000).getHours();\r\n            let current = Math.round(f.temp.day);\r\n            let fl = Math.round(f.feels_like.day);\r\n            if(hour > 12){\r\n                hour = hour-12;\r\n                ampm = 'PM';\r\n            } \r\n            return(\r\n                <div className=\"text-center justify-between items-center inline-block  rounded-2xl my-2 mx-2 shadow-md bg-gray-900 \" key={key}>\r\n                    <div className=\"text-center  flex items-center justify-center flex-col mx-auto\">\r\n                        <p className=\"block my-1\">\r\n                            {current}&deg; {degree}\r\n                        </p>\r\n                        <p className=\"block my-1\">\r\n                            {f.weather[0].main} <img className=\"block\" src={url} alt={f.weather[0].description}/>\r\n                        \r\n                        </p>\r\n                        <span className=\"block my-1 w-48 text-sm\"  >{date}, {numberDay} {MonthDate} {Year}</span>\r\n                        <p className=\"block my-1 text-base\">\r\n                            {hour}:00 {ampm}{\" \"}\r\n                        </p>\r\n                        \r\n                        <p className=\"block my-1\">\r\n                            <span className=\"text-sm\">Feels Like: {fl}&deg; {degree}</span>\r\n                        </p>\r\n                        \r\n                    </div>\r\n                </div>\r\n            );\r\n            \r\n        });\r\n\r\n        return(\r\n\r\n        <div className=\"w-full px-2\">\r\n            <div className=\"bg-transparent text-white relative min-w-0 break-words rounded-lg overflow-hidden shadow-sm mb-4 w-full  dark:bg-gray-600\">\r\n                <div className=\"divider table mx-2 text-center bg-transparent whitespace-nowrap mb-2\">\r\n                    <h3 className=\"inline-block px-3 font-bold  \">Daily Forecast</h3>\r\n                </div>\r\n                <div className=\"px-6 py-4 relative \">\r\n                    {forecastItems}\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}