{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\reactapp\\\\weather\\\\src\\\\components\\\\line-chart.js\";\nimport React from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LineChart extends React.Component {\n  render() {\n    let h = [];\n    let t = [];\n    this.props.hour_forecast.map(f => {\n      let hour = new Date(f.dt * 1000).getHours();\n      h.push(hour);\n      return {\n        hour\n      };\n    });\n    this.props.hour_forecast.map(f => {\n      let temp = f.temp;\n      t.push(temp);\n      return {\n        temp\n      };\n    });\n    const linedata = {\n      labels: h,\n      datasets: [{\n        label: 'Day Temperature',\n        data: t,\n        backgroundColor: ['rgba(0, 0, 0, 0)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n        borderWidth: 1\n      }]\n    };\n    console.log(linedata);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-900 text-white relative min-w-0 break-words rounded-lg overflow-hidden shadow-sm  dark:bg-gray-600\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        className: \"m-4\",\n        data: linedata,\n        height: 400,\n        width: 600,\n        options: {\n          responsive: true,\n          plugins: {\n            title: {\n              display: true,\n              text: 'Temperature of Next 48 Hours',\n              color: 'rgb(255, 255, 255)'\n            },\n            legend: {\n              labels: {\n                color: 'rgb(255, 255, 255)'\n              },\n              title: {}\n            }\n          },\n          interaction: {\n            mode: 'index',\n            intersect: false\n          },\n          scales: {\n            x: {\n              display: true,\n              grid: {\n                borderColor: 'rgba(255,255,255,255)',\n                color: 'rgb(255, 255, 255)'\n              },\n              title: {\n                display: true,\n                text: 'Hour(H)',\n                color: 'rgb(255, 255, 255)',\n                font: {\n                  family: 'Times',\n                  size: 20,\n                  color: 'rgb(255, 255, 255)',\n                  weight: 'bold',\n                  lineHeight: 1.2\n                },\n                padding: {\n                  top: 20,\n                  left: 0,\n                  right: 0,\n                  bottom: 0\n                }\n              }\n            },\n            y: {\n              display: true,\n              grid: {\n                color: function (context) {\n                  if (context.tick.value > 0) {\n                    return '#ffff';\n                  } else if (context.tick.value < 0) {\n                    return '#ffff';\n                  }\n\n                  return '#fffff';\n                }\n              },\n              title: {\n                display: true,\n                text: 'Temperature',\n                color: 'rgb(255, 255, 255)',\n                font: {\n                  family: 'Times',\n                  size: 20,\n                  style: 'normal',\n                  color: 'rgb(255, 255, 255)',\n                  lineHeight: 1.2\n                },\n                padding: {\n                  top: 30,\n                  left: 0,\n                  right: 0,\n                  bottom: 0\n                }\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["C:/xampp/htdocs/reactapp/weather/src/components/line-chart.js"],"names":["React","Line","LineChart","Component","render","h","t","props","hour_forecast","map","f","hour","Date","dt","getHours","push","temp","linedata","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","console","log","responsive","plugins","title","display","text","color","legend","interaction","mode","intersect","scales","x","grid","font","family","size","weight","lineHeight","padding","top","left","right","bottom","y","context","tick","value","style"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n\r\n\r\nclass LineChart extends React.Component{\r\n    \r\n\r\n\r\n    render(){\r\n        let h = [];\r\n        let t = [];\r\n        this.props.hour_forecast.map( (f) => {\r\n            let hour = new Date(f.dt * 1000).getHours();\r\n            h.push(hour);\r\n            return(\r\n                    {hour}\r\n            );\r\n        });\r\n\r\n        this.props.hour_forecast.map( (f) => {\r\n\r\n            \r\n            let temp = f.temp;\r\n            t.push(temp);\r\n            return(\r\n                    {temp}\r\n            );\r\n        });\r\n        \r\n        const linedata = {\r\n            labels: h,\r\n            datasets: [\r\n                {\r\n                    label: 'Day Temperature',\r\n                    data: t,\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 0, 0)',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n            ],\r\n        };\r\n        console.log(linedata);\r\n        return(\r\n            <div className=\"bg-gray-900 text-white relative min-w-0 break-words rounded-lg overflow-hidden shadow-sm  dark:bg-gray-600\">\r\n                <Line className=\"m-4\"\r\n                \r\n                data={linedata}\r\n                height={400}\r\n                width={600}\r\n                \r\n                options={{\r\n\r\n                    responsive : true,\r\n                    plugins: {\r\n                        title: {\r\n                          display: true,\r\n                          text: 'Temperature of Next 48 Hours',\r\n                          color: 'rgb(255, 255, 255)',\r\n                        },\r\n                        legend: {\r\n                            labels:{\r\n                                color: 'rgb(255, 255, 255)',\r\n                            },\r\n                            title:{\r\n                                \r\n                            }\r\n                        },\r\n                        \r\n                        \r\n                      },\r\n                    interaction: {\r\n                        mode: 'index',\r\n                        intersect: false\r\n                      },\r\n                    scales: {\r\n                        \r\n                        x: {\r\n                            \r\n                          display: true,\r\n                          grid: {\r\n                            borderColor: 'rgba(255,255,255,255)',\r\n                            color: 'rgb(255, 255, 255)',\r\n                            },\r\n                          title: {\r\n                            display: true,\r\n                            text: 'Hour(H)',\r\n                            color: 'rgb(255, 255, 255)',\r\n                            font: {\r\n                              family: 'Times',\r\n                              size: 20,\r\n                              color: 'rgb(255, 255, 255)',\r\n                              weight: 'bold',\r\n                              lineHeight: 1.2,\r\n                            },\r\n                            padding: {top: 20, left: 0, right: 0, bottom: 0}\r\n                          }\r\n                        },\r\n                        y: {\r\n                          display: true,\r\n                          grid: {\r\n                            color: function(context) {\r\n                              if (context.tick.value > 0) {\r\n                                return '#ffff';\r\n                              } else if (context.tick.value < 0) {\r\n                                return '#ffff';\r\n                              }\r\n                  \r\n                              return '#fffff';\r\n                            },\r\n                          },\r\n                          title: {\r\n                            display: true,\r\n                            text: 'Temperature',\r\n                            color: 'rgb(255, 255, 255)',\r\n                            font: {\r\n                              family: 'Times',\r\n                              size: 20,\r\n                              style: 'normal',\r\n                              color:'rgb(255, 255, 255)',\r\n                              lineHeight: 1.2\r\n                            },\r\n                            padding: {top: 30, left: 0, right: 0, bottom: 0}\r\n                          }\r\n                        }\r\n                    }\r\n                    \r\n\r\n                    \r\n                }\r\n                \r\n            }\r\n                 \r\n\r\n                />\r\n            </div>\r\n\r\n        );\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default LineChart;\r\n\r\n"]},"metadata":{},"sourceType":"module"}