{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\reactapp\\\\weather\\\\src\\\\components\\\\line-chart.js\";\nimport React from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LineChart extends React.Component {\n  render() {\n    let h = [];\n    let i;\n    const hourTime = [this.props.hour_forecast.map(f => {\n      let hour = new Date(f.dt * 1000).getHours();\n      return {\n        hour\n      };\n    })];\n    var array = hourTime[0];\n\n    for (i = 0; i < 24; i++) {\n      h.push(Object.values(array[0]));\n    }\n\n    console.log(h);\n    const hourTemp = [this.props.hour_forecast.map(f => {\n      let temp = f.temp;\n      return {\n        temp\n      };\n    })];\n\n    for (i = 0; i < 24; i++) {}\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n          datasets: [{\n            label: 'Evolution of Day Temperature',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["C:/xampp/htdocs/reactapp/weather/src/components/line-chart.js"],"names":["React","Line","LineChart","Component","render","h","i","hourTime","props","hour_forecast","map","f","hour","Date","dt","getHours","array","push","Object","values","console","log","hourTemp","temp","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","maintainAspectRatio"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAuC;AAInCC,EAAAA,MAAM,GAAE;AACJ,QAAIC,CAAC,GAAG,EAAR;AACA,QAAIC,CAAJ;AACA,UAAMC,QAAQ,GAAG,CAAC,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,GAAzB,CAA+BC,CAAD,IAAO;AACnD,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,CAAC,CAACG,EAAF,GAAO,IAAhB,EAAsBC,QAAtB,EAAX;AAEA,aACQ;AAACH,QAAAA;AAAD,OADR;AAGH,KANiB,CAAD,CAAjB;AAOA,QAAII,KAAK,GAAGT,QAAQ,CAAC,CAAD,CAApB;;AAEA,SAAID,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAC,EAAb,EAAiBA,CAAC,EAAlB,EAAqB;AACjBD,MAAAA,CAAC,CAACY,IAAF,CAAOC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAAC,CAAD,CAAnB,CAAP;AACH;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYhB,CAAZ;AACA,UAAMiB,QAAQ,GAAG,CAAC,KAAKd,KAAL,CAAWC,aAAX,CAAyBC,GAAzB,CAA+BC,CAAD,IAAO;AAGnD,UAAIY,IAAI,GAAGZ,CAAC,CAACY,IAAb;AAEA,aACQ;AAACA,QAAAA;AAAD,OADR;AAGH,KARiB,CAAD,CAAjB;;AAUA,SAAIjB,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAC,EAAb,EAAiBA,CAAC,EAAlB,EAAqB,CAEpB;;AAED,wBACI;AAAA,6BACI,QAAC,IAAD;AAEI,QAAA,IAAI,EAAE;AACFkB,UAAAA,MAAM,EAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C,QAA7C,CADP;AAEFC,UAAAA,QAAQ,EAAC,CACL;AACIC,YAAAA,KAAK,EAAE,8BADX;AAEIC,YAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFV;AAGIC,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHrB;AAWIC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXjB;AAmBIC,YAAAA,WAAW,EAAE;AAnBjB,WADK;AAFP,SAFV;AA6BI,QAAA,MAAM,EAAE,GA7BZ;AA8BI,QAAA,KAAK,EAAE,GA9BX;AA+BI,QAAA,OAAO,EAAE;AACLC,UAAAA,mBAAmB,EAAE;AADhB;AA/Bb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA2CH;;AA7EkC;;AAmFvC,eAAe7B,SAAf","sourcesContent":["import React from \"react\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n\r\nclass LineChart extends React.Component{\r\n    \r\n\r\n\r\n    render(){\r\n        let h = [];\r\n        let i;\r\n        const hourTime = [this.props.hour_forecast.map( (f) => {\r\n            let hour = new Date(f.dt * 1000).getHours();\r\n            \r\n            return(\r\n                    {hour}\r\n            );\r\n        })];\r\n        var array = hourTime[0];\r\n        \r\n        for(i = 0; i<24; i++){\r\n            h.push(Object.values(array[0]));\r\n        }\r\n        console.log(h);\r\n        const hourTemp = [this.props.hour_forecast.map( (f) => {\r\n\r\n            \r\n            let temp = f.temp;\r\n            \r\n            return(\r\n                    {temp}\r\n            );\r\n        })];\r\n\r\n        for(i = 0; i<24; i++){\r\n            \r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <Line\r\n                \r\n                    data={{ \r\n                        labels:  ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                        datasets:[\r\n                            {\r\n                                label: 'Evolution of Day Temperature',\r\n                                data: [12, 19, 3, 5, 2, 3],\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)',\r\n                                    'rgba(255, 206, 86, 0.2)',\r\n                                    'rgba(75, 192, 192, 0.2)',\r\n                                    'rgba(153, 102, 255, 0.2)',\r\n                                    'rgba(255, 159, 64, 0.2)'\r\n                                ],\r\n                                borderColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ],\r\n                                borderWidth: 1\r\n\r\n                            }\r\n                        ]\r\n                     }}\r\n                    height={400}\r\n                    width={600}\r\n                    options={{ \r\n                        maintainAspectRatio: false,\r\n                        \r\n                     }}\r\n\r\n                    />\r\n            </div>\r\n\r\n        );\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}