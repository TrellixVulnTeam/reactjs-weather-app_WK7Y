{"ast":null,"code":"import _classCallCheck from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/xampp/htdocs/reactapp/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Line}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";var LineChart=/*#__PURE__*/function(_React$Component){_inherits(LineChart,_React$Component);var _super=_createSuper(LineChart);function LineChart(){_classCallCheck(this,LineChart);return _super.apply(this,arguments);}_createClass(LineChart,[{key:\"render\",value:function render(){var h=[];var t=[];var i;var hourTime=[this.props.hour_forecast.map(function(f){var hour=new Date(f.dt*1000).getHours();h.push(hour);return{hour:hour};})];var hourTemp=[this.props.hour_forecast.map(function(f){var temp=f.temp;t.push(temp);return{temp:temp};})];console.log(h);console.log(t);var linedata={labels:h,datasets:[{label:'Day Temperature',data:t,backgroundColor:['rgba(0, 0, 0, 0)'],borderColor:['rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(255, 206, 86, 1)','rgba(75, 192, 192, 1)','rgba(153, 102, 255, 1)','rgba(255, 159, 64, 1)'],borderWidth:1}]};console.log(linedata);return/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-900 text-white relative min-w-0 break-words rounded-lg overflow-hidden shadow-sm  dark:bg-gray-600\",children:/*#__PURE__*/_jsx(Line,{className:\"m-4\",data:linedata,height:400,width:600,options:{responsive:true,plugins:{title:{display:true,text:'Temperature of Next 48 Hours',color:'rgb(255, 255, 255)'},legend:{labels:{color:'rgb(255, 255, 255)'},title:{}}},interaction:{mode:'index',intersect:false},scales:{x:{display:true,grid:{borderColor:'rgba(255,255,255,255)',color:'rgb(255, 255, 255)'},title:{display:true,text:'Hour(H)',color:'rgb(255, 255, 255)',font:{family:'Times',size:20,color:'rgb(255, 255, 255)',weight:'bold',lineHeight:1.2},padding:{top:20,left:0,right:0,bottom:0}}},y:{display:true,grid:{color:function color(context){if(context.tick.value>0){return'#ffff';}else if(context.tick.value<0){return'#ffff';}return'#fffff';}},title:{display:true,text:'Temperature',color:'rgb(255, 255, 255)',font:{family:'Times',size:20,style:'normal',color:'rgb(255, 255, 255)',lineHeight:1.2},padding:{top:30,left:0,right:0,bottom:0}}}}}})});}}]);return LineChart;}(React.Component);export default LineChart;","map":{"version":3,"sources":["C:/xampp/htdocs/reactapp/weather/src/components/line-chart.js"],"names":["React","Line","LineChart","h","t","i","hourTime","props","hour_forecast","map","f","hour","Date","dt","getHours","push","hourTemp","temp","console","log","linedata","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","responsive","plugins","title","display","text","color","legend","interaction","mode","intersect","scales","x","grid","font","family","size","weight","lineHeight","padding","top","left","right","bottom","y","context","tick","value","style","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n\r\n\r\nclass LineChart extends React.Component{\r\n    \r\n\r\n\r\n    render(){\r\n        let h = [];\r\n        let t = [];\r\n        let i;\r\n        const hourTime = [this.props.hour_forecast.map( (f) => {\r\n            let hour = new Date(f.dt * 1000).getHours();\r\n            h.push(hour);\r\n            return(\r\n                    {hour}\r\n            );\r\n        })];\r\n\r\n        const hourTemp = [this.props.hour_forecast.map( (f) => {\r\n\r\n            \r\n            let temp = f.temp;\r\n            t.push(temp);\r\n            return(\r\n                    {temp}\r\n            );\r\n        })];\r\n        console.log(h);\r\n        console.log(t);\r\n        \r\n        const linedata = {\r\n            labels: h,\r\n            datasets: [\r\n                {\r\n                    label: 'Day Temperature',\r\n                    data: t,\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 0, 0)',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n            ],\r\n        };\r\n        console.log(linedata);\r\n        return(\r\n            <div className=\"bg-gray-900 text-white relative min-w-0 break-words rounded-lg overflow-hidden shadow-sm  dark:bg-gray-600\">\r\n                <Line className=\"m-4\"\r\n                \r\n                data={linedata}\r\n                height={400}\r\n                width={600}\r\n                \r\n                options={{\r\n\r\n                    responsive : true,\r\n                    plugins: {\r\n                        title: {\r\n                          display: true,\r\n                          text: 'Temperature of Next 48 Hours',\r\n                          color: 'rgb(255, 255, 255)',\r\n                        },\r\n                        legend: {\r\n                            labels:{\r\n                                color: 'rgb(255, 255, 255)',\r\n                            },\r\n                            title:{\r\n                                \r\n                            }\r\n                        },\r\n                        \r\n                        \r\n                      },\r\n                    interaction: {\r\n                        mode: 'index',\r\n                        intersect: false\r\n                      },\r\n                    scales: {\r\n                        \r\n                        x: {\r\n                            \r\n                          display: true,\r\n                          grid: {\r\n                            borderColor: 'rgba(255,255,255,255)',\r\n                            color: 'rgb(255, 255, 255)',\r\n                            },\r\n                          title: {\r\n                            display: true,\r\n                            text: 'Hour(H)',\r\n                            color: 'rgb(255, 255, 255)',\r\n                            font: {\r\n                              family: 'Times',\r\n                              size: 20,\r\n                              color: 'rgb(255, 255, 255)',\r\n                              weight: 'bold',\r\n                              lineHeight: 1.2,\r\n                            },\r\n                            padding: {top: 20, left: 0, right: 0, bottom: 0}\r\n                          }\r\n                        },\r\n                        y: {\r\n                          display: true,\r\n                          grid: {\r\n                            color: function(context) {\r\n                              if (context.tick.value > 0) {\r\n                                return '#ffff';\r\n                              } else if (context.tick.value < 0) {\r\n                                return '#ffff';\r\n                              }\r\n                  \r\n                              return '#fffff';\r\n                            },\r\n                          },\r\n                          title: {\r\n                            display: true,\r\n                            text: 'Temperature',\r\n                            color: 'rgb(255, 255, 255)',\r\n                            font: {\r\n                              family: 'Times',\r\n                              size: 20,\r\n                              style: 'normal',\r\n                              color:'rgb(255, 255, 255)',\r\n                              lineHeight: 1.2\r\n                            },\r\n                            padding: {top: 30, left: 0, right: 0, bottom: 0}\r\n                          }\r\n                        }\r\n                    }\r\n                    \r\n\r\n                    \r\n                }\r\n                \r\n            }\r\n                 \r\n\r\n                />\r\n            </div>\r\n\r\n        );\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default LineChart;\r\n\r\n"]},"metadata":{},"sourceType":"module"}