{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\reactapp\\\\weather\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.scss';\nimport './index.css';\nimport SearchBar from './components/search-bar';\nimport CurrentWeather from './components/current-weather';\nimport Forecast from './components/forecast-weather';\nimport ErrorWeather from './components/error-weather';\nimport { getCurrentWeather, getForecast } from './apis/open-weather.api'; //functional component\n//returns template\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: 'Portimão',\n      selectValue: 'metric',\n      temp: '',\n      feelsLike: '',\n      description: '',\n      icon: '',\n      city: '',\n      cod: '',\n      dailyForecast: []\n    };\n  }\n\n  componentDidMount() {\n    this.onFormSubmit();\n  }\n\n  onInputChange(e) {\n    this.setState({\n      location: e.target.value\n    });\n  }\n\n  onHandleChange(e) {\n    this.setState({\n      selectValue: e.target.value\n    });\n  }\n\n  async onFormSubmit() {\n    const weatherRes = await getCurrentWeather(this.state.location, this.state.selectValue);\n    this.setState({\n      cod: weatherRes.cod\n    });\n    console.log('weather res', weatherRes);\n\n    if (this.state.cod === '') {\n      const lat = weatherRes.data.coord.lat;\n      const lon = weatherRes.data.coord.lon;\n      const forecastRes = await getForecast(lat, lon, this.state.selectValue);\n      this.setState({\n        city: weatherRes.data.name,\n        temp: weatherRes.data.main.temp,\n        feelsLike: weatherRes.data.main.feels_like,\n        description: weatherRes.data.weather[0].main,\n        icon: weatherRes.data.weather[0].icon,\n        dailyForecast: forecastRes.data.daily\n      });\n    }\n  }\n\n  render() {\n    let current_weather;\n    let forecast_weather;\n    let error;\n\n    if (this.state.cod !== '404') {\n      current_weather = /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        currentTemperature: this.state.temp,\n        feelsLike: this.state.feelsLike,\n        description: this.state.description,\n        icon: this.state.icon,\n        city: this.state.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n      forecast_weather = /*#__PURE__*/_jsxDEV(Forecast, {\n        forecast: this.state.dailyForecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this);\n    } else {\n      error = /*#__PURE__*/_jsxDEV(ErrorWeather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          location: this.state.location,\n          selectValue: this.state.selectValue,\n          inputChange: e => this.onInputChange(e),\n          handleChange: e => this.onHandleChange(e),\n          formsubmitted: () => this.onFormSubmit()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), current_weather, forecast_weather, error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/reactapp/weather/src/App.js"],"names":["React","SearchBar","CurrentWeather","Forecast","ErrorWeather","getCurrentWeather","getForecast","App","Component","constructor","props","state","location","selectValue","temp","feelsLike","description","icon","city","cod","dailyForecast","componentDidMount","onFormSubmit","onInputChange","e","setState","target","value","onHandleChange","weatherRes","console","log","lat","data","coord","lon","forecastRes","name","main","feels_like","weather","daily","render","current_weather","forecast_weather","error"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './App.scss';\nimport './index.css';\n\nimport SearchBar from './components/search-bar';\nimport CurrentWeather from './components/current-weather';\nimport Forecast from './components/forecast-weather';\nimport ErrorWeather from './components/error-weather';\n\nimport {getCurrentWeather, getForecast} from './apis/open-weather.api';\n\n//functional component\n//returns template\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n        location: 'Portimão',\n        selectValue: 'metric',\n        temp: '',\n        feelsLike: '',\n        description: '',\n        icon: '',\n        city: '',\n        cod: '',\n        dailyForecast: []\n    };\n    \n    \n  }\n  componentDidMount(){\n    this.onFormSubmit();\n  }\n\n  onInputChange(e){\n      this.setState({\n          location: e.target.value,\n          \n      });\n  }\n  onHandleChange(e){\n    this.setState({\n      selectValue : e.target.value\n    });\n  }\n  async onFormSubmit(){\n    \n    const weatherRes = await getCurrentWeather(this.state.location, this.state.selectValue);\n    this.setState({\n      cod : weatherRes.cod\n    })\n    console.log('weather res', weatherRes);\n    if(this.state.cod === ''){\n      const lat = weatherRes.data.coord.lat;\n      const lon = weatherRes.data.coord.lon;\n      const forecastRes = await getForecast(lat,lon, this.state.selectValue);\n      \n      this.setState({\n            city :  weatherRes.data.name,\n            temp: weatherRes.data.main.temp,\n            feelsLike: weatherRes.data.main.feels_like,\n            description: weatherRes.data.weather[0].main,\n            icon: weatherRes.data.weather[0].icon,\n            dailyForecast: forecastRes.data.daily\n      });\n    }\n    \n  }\n\n  render(){\n\n    let current_weather;\n    let forecast_weather;\n    let error;\n    if(this.state.cod !== '404'){\n      current_weather = (\n        <CurrentWeather \n                currentTemperature={this.state.temp}\n                feelsLike={this.state.feelsLike}\n                description={this.state.description}\n                icon={this.state.icon}     \n                city={this.state.city} \n          />);\n      forecast_weather=(<Forecast forecast={this.state.dailyForecast}/>);\n    }else{\n      error = (<ErrorWeather />);\n    }\n\n\n    return (\n      <div className=\"App\">\n        \n        <header className=\"App-header\">\n          \n          <SearchBar \n                location={this.state.location} \n                selectValue={this.state.selectValue}\n                inputChange= {e => this.onInputChange(e)}\n                handleChange= {e => this.onHandleChange(e)}\n                formsubmitted={() => this.onFormSubmit()}\n          />\n          {current_weather}\n          {forecast_weather}\n          {error}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}