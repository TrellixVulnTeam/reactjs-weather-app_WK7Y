{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\reactapp\\\\weather\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.scss';\nimport './index.css';\nimport SearchBar from './components/search-bar';\nimport CurrentWeather from './components/current-weather';\nimport Forecast from './components/forecast-weather';\nimport ErrorWeather from './components/error-weather';\nimport LineChart from './components/line-chart';\nimport { getCurrentWeather, getForecast } from './apis/open-weather.api'; //functional component\n//returns template\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: 'PortimÃ£o',\n      selectValue: 'metric',\n      temp: '',\n      mintemp: '',\n      maxtemp: '',\n      humidity: '',\n      clouds: '',\n      feelsLike: '',\n      description: '',\n      icon: '',\n      city: '',\n      cod: '',\n      dailyForecast: [],\n      hourlyForecast: [],\n      day: '',\n      degree: ''\n    };\n  }\n\n  componentDidMount() {\n    this.onFormSubmit();\n  }\n\n  onInputChange(e) {\n    this.setState({\n      location: e.target.value\n    });\n  }\n\n  onHandleChange(e) {\n    this.setState({\n      selectValue: e.target.value\n    });\n  }\n\n  async onFormSubmit() {\n    const weatherRes = await getCurrentWeather(this.state.location, this.state.selectValue);\n    this.setState({\n      cod: weatherRes\n    });\n    console.log(this.state.cod);\n    const lat = weatherRes.data.coord.lat;\n    const lon = weatherRes.data.coord.lon;\n    const forecastRes = await getForecast(lat, lon, this.state.selectValue);\n    this.setState({\n      city: weatherRes.data.name,\n      day: weatherRes.data.dt,\n      temp: weatherRes.data.main.temp,\n      mintemp: weatherRes.data.main.temp_min,\n      maxtemp: weatherRes.data.main.temp_max,\n      feelsLike: weatherRes.data.main.feels_like,\n      humidity: weatherRes.data.main.humidity,\n      clouds: weatherRes.data.clouds.all,\n      description: weatherRes.data.weather[0].main,\n      icon: weatherRes.data.weather[0].icon,\n      dailyForecast: forecastRes.data.daily,\n      hourlyForecast: forecastRes.data.hourly,\n      degree: this.state.selectValue\n    });\n  }\n\n  render() {\n    let current_weather;\n    let forecast_weather;\n    let linechart_weather;\n    let error;\n\n    if (this.state.cod !== '404') {\n      current_weather = /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        currentTemperature: this.state.temp,\n        minTemperature: this.state.mintemp,\n        maxTemperature: this.state.maxtemp,\n        feelsLike: this.state.feelsLike,\n        humidity: this.state.humidity,\n        clouds: this.state.clouds,\n        description: this.state.description,\n        icon: this.state.icon,\n        city: this.state.city,\n        day: this.state.day,\n        selectValue: this.state.degree\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n      forecast_weather = /*#__PURE__*/_jsxDEV(Forecast, {\n        forecast: this.state.dailyForecast,\n        selectValue: this.state.degree\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, this);\n      linechart_weather = /*#__PURE__*/_jsxDEV(LineChart, {\n        hour_forecast: this.state.hourlyForecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 28\n      }, this);\n    } else {\n      error = /*#__PURE__*/_jsxDEV(ErrorWeather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header mx-auto min-h-screen\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          location: this.state.location,\n          selectValue: this.state.selectValue,\n          inputChange: e => this.onInputChange(e),\n          handleChange: e => this.onHandleChange(e),\n          formsubmitted: () => this.onFormSubmit()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap justify-center\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap justify-center\",\n          children: current_weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap justify-center\",\n          children: linechart_weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap justify-center\",\n          children: forecast_weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/reactapp/weather/src/App.js"],"names":["React","SearchBar","CurrentWeather","Forecast","ErrorWeather","LineChart","getCurrentWeather","getForecast","App","Component","constructor","props","state","location","selectValue","temp","mintemp","maxtemp","humidity","clouds","feelsLike","description","icon","city","cod","dailyForecast","hourlyForecast","day","degree","componentDidMount","onFormSubmit","onInputChange","e","setState","target","value","onHandleChange","weatherRes","console","log","lat","data","coord","lon","forecastRes","name","dt","main","temp_min","temp_max","feels_like","all","weather","daily","hourly","render","current_weather","forecast_weather","linechart_weather","error"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './App.scss';\nimport './index.css';\n\nimport SearchBar from './components/search-bar';\nimport CurrentWeather from './components/current-weather';\nimport Forecast from './components/forecast-weather';\nimport ErrorWeather from './components/error-weather';\nimport LineChart from './components/line-chart';\n\nimport {getCurrentWeather, getForecast} from './apis/open-weather.api';\n\n//functional component\n//returns template\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n        location: 'PortimÃ£o',\n        selectValue: 'metric',\n        temp: '',\n        mintemp: '',\n        maxtemp: '',\n        humidity: '',\n        clouds: '',\n        feelsLike: '',\n        description: '',\n        icon: '',\n        city: '',\n        cod: '',\n        dailyForecast: [],\n        hourlyForecast: [],\n        day: '',\n        degree: '',\n\n    };\n    \n    \n  }\n  componentDidMount(){\n    this.onFormSubmit();\n  }\n\n  onInputChange(e){\n      this.setState({\n          location: e.target.value,\n          \n      });\n  }\n  onHandleChange(e){\n    this.setState({\n      selectValue : e.target.value\n    });\n  }\n  async onFormSubmit(){\n    \n    const weatherRes = await getCurrentWeather(this.state.location, this.state.selectValue);\n    this.setState({\n      cod : weatherRes\n    })\n    console.log(this.state.cod);\n      const lat = weatherRes.data.coord.lat;\n      const lon = weatherRes.data.coord.lon;\n      const forecastRes = await getForecast(lat,lon, this.state.selectValue);\n      this.setState({\n            city :  weatherRes.data.name,\n            day :  weatherRes.data.dt,\n            temp: weatherRes.data.main.temp,\n            mintemp: weatherRes.data.main.temp_min,\n            maxtemp: weatherRes.data.main.temp_max,\n            feelsLike: weatherRes.data.main.feels_like,\n            humidity: weatherRes.data.main.humidity,\n            clouds: weatherRes.data.clouds.all,\n            description: weatherRes.data.weather[0].main,\n            icon: weatherRes.data.weather[0].icon,\n            dailyForecast: forecastRes.data.daily,\n            hourlyForecast: forecastRes.data.hourly,\n            degree: this.state.selectValue,\n      });\n    \n    \n  }\n\n  render(){\n\n    let current_weather;\n    let forecast_weather;\n    let linechart_weather;\n    let error;\n    if(this.state.cod !== '404'){\n      current_weather = (\n        <CurrentWeather \n                currentTemperature={this.state.temp}\n                minTemperature={this.state.mintemp}\n                maxTemperature={this.state.maxtemp}\n                feelsLike={this.state.feelsLike}\n                humidity={this.state.humidity}\n                clouds={this.state.clouds}\n                description={this.state.description}\n                icon={this.state.icon}     \n                city={this.state.city} \n                day={this.state.day}\n                selectValue={this.state.degree}\n          />);\n      forecast_weather=(<Forecast \n        forecast={this.state.dailyForecast}\n        selectValue={this.state.degree}/>);\n      linechart_weather = (<LineChart hour_forecast={this.state.hourlyForecast} />);\n    }else{\n      error = (<ErrorWeather />);\n    }\n    \n\n    return (\n      <div className=\"App\">\n        \n        <header className=\"App-header mx-auto min-h-screen\">\n          \n          <SearchBar \n                location={this.state.location} \n                selectValue={this.state.selectValue}\n                inputChange= {e => this.onInputChange(e)}\n                handleChange= {e => this.onHandleChange(e)}\n                formsubmitted={() => this.onFormSubmit()}\n          />\n          \n          <div className=\"flex flex-wrap justify-center\">\n          {error}\n          </div>\n          <div className=\"flex flex-wrap justify-center\">\n            {current_weather}\n            \n          </div>\n          <div className=\"flex flex-wrap justify-center\">\n            {linechart_weather}  \n          </div>\n          <div className=\"flex flex-wrap justify-center\">\n            {forecast_weather}  \n          </div>\n          \n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}