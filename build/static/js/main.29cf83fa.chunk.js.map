{"version":3,"sources":["components/search-bar.js","components/current-weather.js","components/forecast-weather.js","components/error-weather.js","components/line-chart.js","apis/open-weather.api.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","e","this","props","inputChange","preventDefault","formsubmitted","handleChange","location","selectValue","value","className","onSubmit","onFormSubmit","fill","xmlns","viewBox","d","required","type","id","placeholder","onChange","onInputChange","name","onHandleChange","React","Component","CurrentWeather","img","degree","icon","url","src","alt","description","current","Math","round","currentTemperature","min","minTemperature","max","maxTemperature","FL","feelsLike","day","Date","getDay","month","getMonth","weekdays","Array","months","DayDate","MonthDate","Year","getFullYear","numberDay","getDate","city","humidity","clouds","Forecast","forecastItems","forecast","map","f","i","key","weather","ampm","dt","date","hour","getHours","temp","fl","feels_like","main","ErrorWeather","role","LineChart","h","t","hour_forecast","push","linedata","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","console","log","height","width","options","responsive","plugins","title","display","text","color","legend","interaction","mode","intersect","scales","x","grid","font","family","size","weight","lineHeight","padding","top","left","right","bottom","y","context","tick","style","API_key","process","getForecast","lat","lon","axios","get","catch","error","response","cod","App","state","mintemp","maxtemp","dailyForecast","hourlyForecast","setState","target","a","weatherRes","coord","forecastRes","temp_min","temp_max","all","daily","hourly","current_weather","forecast_weather","linechart_weather","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29cf83fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './search-bar.scss';\r\n\r\n//this is a class component\r\nclass SearchBar extends React.Component{\r\n    \r\n    \r\n      onInputChange(e){\r\n          this.props.inputChange(e);\r\n      }\r\n      onFormSubmit(e){\r\n          e.preventDefault();\r\n          this.props.formsubmitted(e);\r\n      }\r\n      onHandleChange(e){\r\n          this.props.handleChange(e);\r\n      }\r\n    \r\n      \r\n\r\n    /**\r\n     * render function is triggered whenever updating the state using set State function \r\n     *<select id=\"units\" name=\"units\">\r\n                        <option value=\"metric\">Celsius</option>\r\n                        <option value=\"imperial\">Fahrenheit</option>\r\n                    </select>\r\n     */\r\n\r\n    render(){\r\n        const location = this.props.location;\r\n        const selectValue = this.props.value;\r\n\r\n        return (\r\n            <div className=\"py-5 justify-center items-center  px-2\">\r\n                <form className=\"max-w-md mx-auto rounded-lg overflow-hidden md:max-w-xl\" onSubmit={(e) => this.onFormSubmit(e)}>\r\n                    <div className=\"md:flex\">\r\n                        <div className=\"w-full p-3\">\r\n                            <div className=\"relative\">\r\n                                <svg className=\"absolute top-5 left-4 w-6 h-6 text-gray-600\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            viewBox=\"0 0 24 24\">\r\n                                            <path\r\n                                                d=\"M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\">\r\n                                            </path>\r\n                                </svg>\r\n                                <input required className=\"h-14 w-96 text-md left-2 pl-10 pr-20 z-0 focus:shadow focus:outline-none bg-white px-12 rounded-lg  hover:cursor-pointer\" type=\"text\" id=\"search\" placeholder=\"City\" value={location} onChange={e => this.onInputChange(e)}/>\r\n                                <div className=\"absolute  right-2 bottom-2\">\r\n                                \r\n                                    <button className=\"h-10 w-20 text-white rounded-lg bg-red-500 hover:bg-red-600\" type=\"submit\">\r\n                                        <p className=\"text-sm font-bold \">Search</p>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"relative right-3 p-3\">\r\n                            <select id=\"units\" name=\"units\" className=\"h-14 text-md focus:shadow focus:outline-none text-black rounded-lg \" value={selectValue} onChange={(e) => this.onHandleChange(e)}>\r\n                                <option value=\"metric\">Celsius</option>\r\n                                <option value=\"imperial\">Fahrenheit</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './current-weather.scss';\r\n\r\nclass CurrentWeather extends React.Component{\r\n    render(){\r\n        let img;\r\n        if(this.props.icon){\r\n            const url = `http://openweathermap.org/img/wn/${this.props.icon}@4x.png`;\r\n            img = (<img className=\"current-weather__icon\" src={url} alt={this.props.description}/>);\r\n        }\r\n        let degree;\r\n        if(this.props.selectValue === 'metric'){\r\n            degree = 'C';\r\n        }else{\r\n            degree = 'F';\r\n        }\r\n\r\n        let current = Math.round(this.props.currentTemperature);\r\n        let min = Math.round(this.props.minTemperature);\r\n        let max = Math.round(this.props.maxTemperature);\r\n        let FL = Math.round(this.props.feelsLike);\r\n        let day = new Date(this.props.day * 1000).getDay();\r\n        let month = new Date(this.props.day * 1000).getMonth();\r\n        let weekdays = new Array(7);\r\n            weekdays[0]= \"Sunday\";\r\n            weekdays[1]= \"Monday\";\r\n            weekdays[2]= \"Tuesday\";\r\n            weekdays[3]= \"Wednesday\";\r\n            weekdays[4]= \"Thrusday\";\r\n            weekdays[5]= \"Friday\";\r\n            weekdays[6]= \"Saturday\";\r\n        let months = new Array(7);\r\n            months[0]= \"January\";\r\n            months[1]= \"February\";\r\n            months[2]= \"March\";\r\n            months[3]= \"April\";\r\n            months[4]= \"May\";\r\n            months[5]= \"June\";\r\n            months[6]= \"July\";\r\n            months[7]= \"August\";\r\n            months[8]= \"September\";\r\n            months[9]= \"October\";\r\n            months[10]= \"November\";\r\n            months[11]= \"December\";\r\n        let DayDate = weekdays[day];\r\n        let MonthDate = months[month];\r\n        let Year = new Date(this.props.day * 1000).getFullYear();\r\n        let numberDay = new Date(this.props.day * 1000).getDate();\r\n\r\n        return(\r\n            <div className=\"bg-gray-900 text-white relative min-w-0 break-words rounded-lg overflow-hidden shadow-sm mb-4  dark:bg-gray-600\">\r\n                <div className=\"px-6 py-6 relative\">\r\n\r\n                    <div className=\"flex mb-4 justify-between items-center\">\r\n                        <div className=\"text-left\">\r\n                            <h5 className=\" mb-0 font-medium text-xl\">{this.props.city}</h5>\r\n                            <h6 className=\"mb-0\">{DayDate}, {numberDay} {MonthDate} {Year}</h6><small>{this.props.description}</small>\r\n                        </div>\r\n                        {img}\r\n                        <div className=\"text-right\">\r\n                            <h3 className=\"font-bold text-4xl mb-0\"><span>{current}&deg; {degree}</span></h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"block sm:flex text-sm justify-between items-center flex-wrap \">\r\n                        <div className=\"w-full sm:w-1/2 \">\r\n                            <div className=\"flex mb-2  justify-between items-center\">\r\n                                <span>Temperature: </span><small className=\"px-2 inline-block\">{current}&deg; {degree}</small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-full sm:w-1/2 md:border-l-2 sm:border-0\">\r\n                            <div className=\"flex mb-2 justify-between items-center sm:ml-0  md:ml-2\">\r\n                                <span>Feels like: </span><small className=\"px-2 inline-block\">{FL}&deg; {degree}</small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-full sm:w-1/2\">\r\n                            <div className=\"flex mb-2 justify-between items-center\">\r\n                                <span>Humidity: </span><small className=\" px-2 inline-block\">{this.props.humidity}%</small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-full sm:w-1/2 md:border-l-2 sm:border-0\">\r\n                            <div className=\"flex mb-2 justify-between items-center  sm:ml-0 md:ml-2\">\r\n                                <span>Min. Temperature: </span><small className=\"px-2 inline-block\">{min}&deg; {degree}</small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-full sm:w-1/2\">\r\n                            <div className=\"flex mb-2 justify-between items-center\">\r\n                                <span>Cloud Cover: </span><small className=\"px-2 inline-block\">{this.props.clouds}%</small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-full sm:w-1/2 md:border-l-2 sm:border-0\">\r\n                            <div className=\"flex mb-2 justify-between items-center sm:ml-0 md:ml-2\">\r\n                                <span>Max. Temperature: </span><small className=\"px-2 inline-block\">{max}&deg; {degree}</small>\r\n                            </div>\r\n                        </div>\r\n                        \r\n\r\n                    </div>\r\n                    \r\n\r\n                   \r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default CurrentWeather;","import React from \"react\";\r\nimport './forecast-weather.scss';\r\n\r\nclass Forecast extends React.Component{\r\n    render(){\r\n        const forecastItems = this.props.forecast.map( (f, i) => {\r\n            \r\n            const key = `forecast-item_${i}`;\r\n            const url = `http://openweathermap.org/img/wn/${f.weather[0].icon}@2x.png`;\r\n            let ampm = 'AM';\r\n            let day = new Date(f.dt * 1000).getDay();\r\n            let weekdays = new Array(7);\r\n            weekdays[0]= \"Sunday\";\r\n            weekdays[1]= \"Monday\";\r\n            weekdays[2]= \"Tuesday\";\r\n            weekdays[3]= \"Wednesday\";\r\n            weekdays[4]= \"Thrusday\";\r\n            weekdays[5]= \"Friday\";\r\n            weekdays[6]= \"Saturday\";\r\n            let date = weekdays[day];\r\n            \r\n            let month = new Date(f.dt * 1000).getMonth();\r\n            let months = new Array(7);\r\n            months[0]= \"January\";\r\n            months[1]= \"February\";\r\n            months[2]= \"March\";\r\n            months[3]= \"April\";\r\n            months[4]= \"May\";\r\n            months[5]= \"June\";\r\n            months[6]= \"July\";\r\n            months[7]= \"August\";\r\n            months[8]= \"September\";\r\n            months[9]= \"October\";\r\n            months[10]= \"November\";\r\n            months[11]= \"December\";\r\n            let MonthDate = months[month];\r\n            let Year = new Date(f.dt * 1000).getFullYear();\r\n            let numberDay = new Date(f.dt * 1000).getDate();\r\n            let degree;\r\n            if(this.props.selectValue === 'metric'){\r\n                degree = 'C';\r\n            }else{\r\n                degree = 'F';\r\n            }\r\n\r\n            let hour = new Date(f.dt * 1000).getHours();\r\n            let current = Math.round(f.temp.day);\r\n            let fl = Math.round(f.feels_like.day);\r\n            if(hour > 12){\r\n                hour = hour-12;\r\n                ampm = 'PM';\r\n            } \r\n            return(\r\n                <div className=\"text-center justify-between items-center inline-block  rounded-2xl my-2 mx-2 shadow-md bg-gray-900 \" key={key}>\r\n                    <div className=\"text-center  flex items-center justify-center flex-col mx-auto\">\r\n                        <p className=\"block my-1\">\r\n                            {current}&deg; {degree}\r\n                        </p>\r\n                        <p className=\"block my-1\">\r\n                            {f.weather[0].main} <img className=\"block\" src={url} alt={f.weather[0].description}/>\r\n                        \r\n                        </p>\r\n                        <span className=\"block my-1 w-48 text-sm\"  >{date}, {numberDay} {MonthDate} {Year}</span>\r\n                        <p className=\"block my-1 text-base\">\r\n                            {hour}:00 {ampm}{\" \"}\r\n                        </p>\r\n                        \r\n                        <p className=\"block my-1\">\r\n                            <span className=\"text-sm\">Feels Like: {fl}&deg; {degree}</span>\r\n                        </p>\r\n                        \r\n                    </div>\r\n                </div>\r\n            );\r\n            \r\n        });\r\n\r\n        return(\r\n\r\n        <div className=\"w-full px-2\">\r\n            <div className=\"bg-transparent text-white relative min-w-0 break-words rounded-lg overflow-hidden shadow-sm mb-4 w-full  dark:bg-gray-600\">\r\n                <div className=\"divider table mx-auto  mt-2 text-center bg-transparent whitespace-nowrap mb-2\">\r\n                    <h3 className=\"inline-block px-3 font-bold  \">Daily Forecast</h3>\r\n                </div>\r\n                <div className=\"px-6 py-4 relative \">\r\n                    {forecastItems}\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Forecast;","import React from 'react';\r\nimport './current-weather.scss';\r\n\r\nclass ErrorWeather extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div\r\n                className=\"\r\n                    absolute\r\n                    text-sm text-left text-white\r\n                    bg-red-500\r\n                    h-12\r\n                    flex\r\n                    \r\n                    items-center\r\n                    p-4\r\n                    rounded-md\r\n                \"\r\n                role=\"alert\"\r\n                >\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    className=\"w-6 h-6 mx-2 stroke-current\"\r\n                >\r\n                    <path\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    stroke-width=\"2\"\r\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\r\n                    ></path>\r\n                </svg>\r\n                    Ocorreu um erro ao procurar a cidade.\r\n                </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ErrorWeather;","import React from \"react\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n\r\n\r\nclass LineChart extends React.Component{\r\n    \r\n\r\n\r\n    render(){\r\n        let h = [];\r\n        let t = [];\r\n        this.props.hour_forecast.map( (f) => {\r\n            let hour = new Date(f.dt * 1000).getHours();\r\n            h.push(hour);\r\n            return(\r\n                    {hour}\r\n            );\r\n        });\r\n        this.props.hour_forecast.map( (f) => {\r\n            let temp = f.temp;\r\n            t.push(temp);\r\n            return(\r\n                    {temp}\r\n            );\r\n        });\r\n        \r\n        const linedata = {\r\n            labels: h,\r\n            datasets: [\r\n                {\r\n                    label: 'Day Temperature',\r\n                    data: t,\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 0, 0)',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n            ],\r\n        };\r\n        console.log(linedata);\r\n        return(\r\n            <div className=\"bg-gray-900 text-white relative min-w-0 break-words rounded-lg overflow-hidden shadow-sm  dark:bg-gray-600\">\r\n                <Line className=\"m-4\"\r\n                data={linedata}\r\n                height={400}\r\n                width={600}\r\n                options={{\r\n                    responsive : true,\r\n                    plugins: {\r\n                        title: {\r\n                          display: true,\r\n                          text: 'Temperature of Next 48 Hours',\r\n                          color: 'rgb(255, 255, 255)',\r\n                        },\r\n                        legend: {\r\n                            labels:{\r\n                                color: 'rgb(255, 255, 255)',\r\n                            },\r\n                            title:{\r\n                                \r\n                            }\r\n                        },\r\n                      },\r\n                    interaction: {\r\n                        mode: 'index',\r\n                        intersect: false\r\n                      },\r\n                    scales: {\r\n                        x: {\r\n                            \r\n                          display: true,\r\n                          grid: {\r\n                            borderColor: 'rgba(255,255,255,255)',\r\n                            color: 'rgb(255, 255, 255)',\r\n                            },\r\n                          title: {\r\n                            display: true,\r\n                            text: 'Hour(H)',\r\n                            color: 'rgb(255, 255, 255)',\r\n                            font: {\r\n                              family: 'Times',\r\n                              size: 20,\r\n                              color: 'rgb(255, 255, 255)',\r\n                              weight: 'bold',\r\n                              lineHeight: 1.2,\r\n                            },\r\n                            padding: {top: 20, left: 0, right: 0, bottom: 0}\r\n                          }\r\n                        },\r\n                        y: {\r\n                          display: true,\r\n                          grid: {\r\n                            color: function(context) {\r\n                              if (context.tick.value > 0) {\r\n                                return '#ffff';\r\n                              } else if (context.tick.value < 0) {\r\n                                return '#ffff';\r\n                              }\r\n                  \r\n                              return '#fffff';\r\n                            },\r\n                          },\r\n                          title: {\r\n                            display: true,\r\n                            text: 'Temperature',\r\n                            color: 'rgb(255, 255, 255)',\r\n                            font: {\r\n                              family: 'Times',\r\n                              size: 20,\r\n                              style: 'normal',\r\n                              color:'rgb(255, 255, 255)',\r\n                              lineHeight: 1.2\r\n                            },\r\n                            padding: {top: 30, left: 0, right: 0, bottom: 0}\r\n                          }\r\n                        }\r\n                    }\r\n                    \r\n\r\n                    \r\n                }\r\n                \r\n            }\r\n                 \r\n\r\n                />\r\n            </div>\r\n\r\n        );\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default LineChart;\r\n\r\n","import axios from 'axios';\r\n\r\n\r\nconst API_key = process.env.REACT_APP_API_KEY;\r\n\r\n\r\nfunction getCurrentWeather(location, selectValue){\r\n    let cod;\r\n    return axios.get(\r\n        `http://api.openweathermap.org/data/2.5/weather?q=${location}&units=${selectValue}&appid=${API_key}`\r\n    ).catch(function(error){\r\n        if(error.response){\r\n            console.log('Erro: ', error.response.data);\r\n            cod= error.response.data.cod\r\n            return cod;\r\n        }\r\n    });\r\n}\r\n\r\nfunction getForecast(lat, lon, selectValue){\r\n    let cod;\r\n    return axios.get(\r\n        `http://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=${selectValue}&appid=${API_key}`\r\n    ).catch(function(error){\r\n        if(error.response){\r\n            console.log('Erro: ', error.response.data);\r\n            cod= error.response.data.cod\r\n            return cod;\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport{\r\n    getCurrentWeather,\r\n    getForecast\r\n}","import React from 'react';\n\nimport './App.scss';\nimport './index.css';\n\nimport SearchBar from './components/search-bar';\nimport CurrentWeather from './components/current-weather';\nimport Forecast from './components/forecast-weather';\nimport ErrorWeather from './components/error-weather';\nimport LineChart from './components/line-chart';\n\nimport {getCurrentWeather, getForecast} from './apis/open-weather.api';\n\n//functional component\n//returns template\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n        location: 'Portimão',\n        selectValue: 'metric',\n        temp: '',\n        mintemp: '',\n        maxtemp: '',\n        humidity: '',\n        clouds: '',\n        feelsLike: '',\n        description: '',\n        icon: '',\n        city: '',\n        cod: '',\n        dailyForecast: [],\n        hourlyForecast: [],\n        day: '',\n        degree: '',\n\n    };\n    \n    \n  }\n  componentDidMount(){\n    this.onFormSubmit();\n  }\n\n  onInputChange(e){\n      this.setState({\n          location: e.target.value,\n          \n      });\n  }\n  onHandleChange(e){\n    this.setState({\n      selectValue : e.target.value\n    });\n  }\n  async onFormSubmit(){\n    \n    const weatherRes = await getCurrentWeather(this.state.location, this.state.selectValue);\n    this.setState({\n      cod : weatherRes\n    })\n    console.log(this.state.cod);\n    if(this.state.cod === '404')\n    {\n      \n    }else{\n      const lat = weatherRes.data.coord.lat;\n      const lon = weatherRes.data.coord.lon;\n      const forecastRes = await getForecast(lat,lon, this.state.selectValue);\n      this.setState({\n            city :  weatherRes.data.name,\n            day :  weatherRes.data.dt,\n            temp: weatherRes.data.main.temp,\n            mintemp: weatherRes.data.main.temp_min,\n            maxtemp: weatherRes.data.main.temp_max,\n            feelsLike: weatherRes.data.main.feels_like,\n            humidity: weatherRes.data.main.humidity,\n            clouds: weatherRes.data.clouds.all,\n            description: weatherRes.data.weather[0].main,\n            icon: weatherRes.data.weather[0].icon,\n            dailyForecast: forecastRes.data.daily,\n            hourlyForecast: forecastRes.data.hourly,\n            degree: this.state.selectValue,\n      });\n    }\n      \n    \n    \n  }\n\n  render(){\n\n    let current_weather;\n    let forecast_weather;\n    let linechart_weather;\n    let error;\n    if(this.state.cod !== '404'){\n      current_weather = (\n        <CurrentWeather \n                currentTemperature={this.state.temp}\n                minTemperature={this.state.mintemp}\n                maxTemperature={this.state.maxtemp}\n                feelsLike={this.state.feelsLike}\n                humidity={this.state.humidity}\n                clouds={this.state.clouds}\n                description={this.state.description}\n                icon={this.state.icon}     \n                city={this.state.city} \n                day={this.state.day}\n                selectValue={this.state.degree}\n          />);\n      forecast_weather=(<Forecast \n        forecast={this.state.dailyForecast}\n        selectValue={this.state.degree}/>);\n      linechart_weather = (<LineChart hour_forecast={this.state.hourlyForecast} />);\n    }else{\n      error = (<ErrorWeather />);\n    }\n    \n\n    return (\n      <div className=\"App\">\n        \n        <header className=\"App-header mx-auto min-h-screen\">\n          \n          <SearchBar \n                location={this.state.location} \n                selectValue={this.state.selectValue}\n                inputChange= {e => this.onInputChange(e)}\n                handleChange= {e => this.onHandleChange(e)}\n                formsubmitted={() => this.onFormSubmit()}\n          />\n          \n          <div className=\"flex flex-wrap justify-center\">\n          {error}\n          </div>\n          <div className=\"flex flex-wrap justify-center\">\n            {current_weather}\n            \n          </div>\n          <div className=\"flex flex-wrap justify-center\">\n            {linechart_weather}  \n          </div>\n          <div className=\"flex flex-wrap justify-center\">\n            {forecast_weather}  \n          </div>\n          \n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}